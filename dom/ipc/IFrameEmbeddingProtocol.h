//
// Automatically generated by ipdlc.
// Edit at your own risk.
//
#ifndef IFrameEmbeddingProtocol_h
#define IFrameEmbeddingProtocol_h
#include "nscore.h"
#include "IPC/IPCMessageUtils.h"
#include "mozilla/ipc/MessageTypes.h"

typedef mozilla::ipc::String String;
typedef mozilla::ipc::StringArray StringArray;
class NS_FINAL_CLASS IFrameEmbeddingProtocol
{
public:
    /*interface*/ class Parent
    {
    public:
    protected:
        Parent() { }
        virtual ~Parent() { }
        Parent(const Parent&);
        Parent& operator=(const Parent&);
    };

    /*interface*/ class Child
    {
    public:
        virtual nsresult init(
            const MagicWindowHandle& parentWidget) = 0;
        virtual nsresult loadURL(
            const String& uri) = 0;
        virtual nsresult move(
            const uint32_t& x, const uint32_t& y, const uint32_t& width, const uint32_t& height) = 0;
    protected:
        Child() { }
        virtual ~Child() { }
        Child(const Child&);
        Child& operator=(const Child&);
    };

    enum State { };
private:
    IFrameEmbeddingProtocol();
    virtual ~IFrameEmbeddingProtocol() = 0;
};

// Parent->child messages

enum IFrameEmbedding_ParentToChildMsgType {
    IFrameEmbedding_ParentToChildStart = IFrameEmbedding_ParentToChildMsgStart << 12,
    IFrameEmbedding_ParentToChildPreStart = (IFrameEmbedding_ParentToChildMsgStart << 12) - 1,

    IFrameEmbedding_ParentToChildMsg_init__ID,
    IFrameEmbedding_ParentToChildMsg_loadURL__ID,
    IFrameEmbedding_ParentToChildMsg_move__ID,


    IFrameEmbedding_ParentToChildEnd
};

class IFrameEmbedding_ParentToChildMsg_init :
    public IPC::MessageWithTuple<MagicWindowHandle>
{
public:
    enum { ID = IFrameEmbedding_ParentToChildMsg_init__ID };
    IFrameEmbedding_ParentToChildMsg_init(
        const MagicWindowHandle& parentWidget) : 
        IPC::MessageWithTuple<MagicWindowHandle>(
            MSG_ROUTING_CONTROL, ID,
            parentWidget)
    { }
};

class IFrameEmbedding_ParentToChildMsg_loadURL :
    public IPC::MessageWithTuple<String>
{
public:
    enum { ID = IFrameEmbedding_ParentToChildMsg_loadURL__ID };
    IFrameEmbedding_ParentToChildMsg_loadURL(
        const String& uri) : 
        IPC::MessageWithTuple<String>(
            MSG_ROUTING_CONTROL, ID,
            uri)
    { }
};

class IFrameEmbedding_ParentToChildMsg_move :
    public IPC::MessageWithTuple< Tuple4 <
        uint32_t, uint32_t, uint32_t, uint32_t> >
{
public:
    enum { ID = IFrameEmbedding_ParentToChildMsg_move__ID };
    IFrameEmbedding_ParentToChildMsg_move(
        const uint32_t& x, const uint32_t& y, const uint32_t& width, const uint32_t& height) : 
        IPC::MessageWithTuple< Tuple4 <
            uint32_t, uint32_t, uint32_t, uint32_t> >(
            MSG_ROUTING_CONTROL, ID,
            MakeTuple(
                x, y, width, height))
    { }
};


// Child->parent messages

enum IFrameEmbedding_ChildToParentMsgType {
    IFrameEmbedding_ChildToParentStart = IFrameEmbedding_ChildToParentMsgStart << 12,
    IFrameEmbedding_ChildToParentPreStart = (IFrameEmbedding_ChildToParentMsgStart << 12) - 1,


    IFrameEmbedding_ChildToParentMsg_Reply_init__ID,
    IFrameEmbedding_ChildToParentMsg_Reply_loadURL__ID,
    IFrameEmbedding_ChildToParentMsg_Reply_move__ID,

    IFrameEmbedding_ChildToParentEnd
};

class IFrameEmbedding_ChildToParentMsg_Reply_init :
    public IPC::Message
{
public:
    enum { ID = IFrameEmbedding_ChildToParentMsg_Reply_init__ID };
    IFrameEmbedding_ChildToParentMsg_Reply_init() : 
                IPC::Message(MSG_ROUTING_CONTROL, ID, PRIORITY_NORMAL)
    { }
};

class IFrameEmbedding_ChildToParentMsg_Reply_loadURL :
    public IPC::Message
{
public:
    enum { ID = IFrameEmbedding_ChildToParentMsg_Reply_loadURL__ID };
    IFrameEmbedding_ChildToParentMsg_Reply_loadURL() : 
                IPC::Message(MSG_ROUTING_CONTROL, ID, PRIORITY_NORMAL)
    { }
};

class IFrameEmbedding_ChildToParentMsg_Reply_move :
    public IPC::Message
{
public:
    enum { ID = IFrameEmbedding_ChildToParentMsg_Reply_move__ID };
    IFrameEmbedding_ChildToParentMsg_Reply_move() : 
                IPC::Message(MSG_ROUTING_CONTROL, ID, PRIORITY_NORMAL)
    { }
};


#endif // ifndef IFrameEmbeddingProtocol_h
