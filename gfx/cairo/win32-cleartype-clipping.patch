diff --git a/gfx/cairo/cairo/src/cairo-win32-font.c b/gfx/cairo/cairo/src/cairo-win32-font.c
--- a/gfx/cairo/cairo/src/cairo-win32-font.c
+++ b/gfx/cairo/cairo/src/cairo-win32-font.c
@@ -986,6 +986,16 @@ _cairo_win32_scaled_font_init_glyph_metr
 			      &metrics, 0, NULL, &matrix) == GDI_ERROR) {
 	  status = _cairo_win32_print_gdi_error ("_cairo_win32_scaled_font_init_glyph_metrics:GetGlyphOutlineW");
 	  memset (&metrics, 0, sizeof (GLYPHMETRICS));
+	} else {
+	    /* The bounding box reported by Windows supposedly contains the glyph's "black" area;
+	     * however, antialiasing (especially with ClearType) means that the actual image that
+	     * needs to be rendered may "bleed" into the adjacent pixels, mainly on the right side.
+	     * To avoid clipping the glyphs when drawn by _cairo_surface_fallback_show_glyphs,
+	     * therefore, we add a pixel of "slop" to left side of the nominal "black" area,
+	     * and two pixels to the right (as tests show some glyphs bleed into this column).
+	     */
+	    metrics.gmptGlyphOrigin.x -= 1;
+	    metrics.gmBlackBoxX += 3;
 	}
 	cairo_win32_scaled_font_done_font (&scaled_font->base);
 	if (status)
