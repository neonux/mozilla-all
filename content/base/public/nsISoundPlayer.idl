/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Mozilla Japan.
 * Portions created by the Initial Developer are Copyright (C) 2009
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Masayuki Nakano <masayuki@d-toybox.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIURL;

/**
 *  nsISoundPlayer provides simple sound playback.
 *
 *  The implementation uses the HTML5 <audio> element, so supports any format
 *  supported by <audio>. Gecko in its default configuration supports Wave (with
 *  8-bit or 16-bit PCM samples and at most 2 channels), and Ogg Vorbis.
 *
 *  When you call play() before the previously playing sound is finished,
 *  the previous sound isn't stopped automatically, so the sounds overlap.
 *
 *  If you don't want the overlap, you should call stop() before play().
 *  The stop() method stops playing all in-progress sounds that are being played
 *  via this interface.
 *
 *  NOTE: nsISystemSoundService calls stops() method automatically before it
 *        plays a system sound.
 */

[scriptable, uuid(8AAB1533-7B56-4861-9390-094658447A0C)]
interface nsISoundPlayer : nsISupports
{
  void play(in nsIURL aURL);
  void stop();
};

