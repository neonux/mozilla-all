<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Test :hover styling when an element is moved under the mouse</title>
  <!--
    From https://bugzilla.mozilla.org/show_bug.cgi?id=119061

    This test checks whether an element to which the :hover pseudo class
    applies is correctly restyled when it moves under the mouse pointer.
    Note this is different to having the pointer move over the element.
  -->
  <script type="text/javascript" src="/MochiKit/packed.js"></script>
  <script type="text/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css" />
  <style type="text/css">

#target:hover { fill: lime; }

  </style>
  <script type="text/javascript">//<![CDATA[

SimpleTest.waitForExplicitFinish();

function synthesizeMouseEvent(type,                // string
                              x,                   // float
                              y,                   // float
                              button,              // long
                              clickCount,          // long
                              modifiers,           // long
                              ignoreWindowBounds)  // boolean
{
  netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');

  window.QueryInterface(Components.interfaces.nsIInterfaceRequestor)
        .getInterface(Components.interfaces.nsIDOMWindowUtils)
        .sendMouseEvent(type, x, y, button, clickCount, modifiers, ignoreWindowBounds);
}

function check_mousemove(event)
{
  if (event.clientX != x || event.clientY != y) {
    document.getElementById('message2').setAttribute('display','block');
  }
}

document.addEventListener('mousemove', check_mousemove, false);

var x, y;

function run_test()
{
  var topLeft = document.getElementById('svg').getBoundingClientRect();
  x = topLeft.left + 50;
  y = topLeft.top + 90;
  try {
    synthesizeMouseEvent('mousemove', x, y, 0, 0, 0, false);
  } catch(e) {
    document.getElementById('message1').setAttribute('display','block');
  }
  document.getElementById('g').removeAttribute('display');

  setTimeout(finish_test, 500);
}

function finish_test()
{
  var target = document.getElementById('target');
  var color = document.defaultView.getComputedStyle(target, '').getPropertyValue('fill');

  ok(color == 'rgb(0, 255, 0)', 'Expected "rgb(0, 255, 0)", got "' + color + '"');

  SimpleTest.finish();
}

  //]]></script>
</head>
<body onload="run_test()">
<svg id="svg" xmlns="http://www.w3.org/2000/svg" width="500" height="500">
  <rect width="100%" height="100%" fill="red"/>
  <g id="g" display="none">
    <rect width="100%" height="100%" fill="lime"/>
    <rect id="target" width="100" height="500" fill="red"/>
  </g>
  <text id="message1" display="none" x="10" y="40">
    You user-agent does not have the necessary support for synthesizing mouse events.
  </text>
  <text id="message2" display="none" x="10" y="80">
    You moved your mouse! That can cause this test to appear to fail.
  </text>
</svg>
<p id="display">
</p>
<div id="content">
</div>
<pre id="test">
</pre>
</body>
</html>
