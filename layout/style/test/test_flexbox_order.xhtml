<html xmlns="http://www.w3.org/1999/xhtml">
<!--
https://bugzilla.mozilla.org/show_bug.cgi?id=666041
-->
<head>
  <title>Test for Bug 666041</title>
  <script type="application/javascript" src="/tests/SimpleTest/SimpleTest.js"></script>
  <script type="application/javascript" src="/tests/SimpleTest/WindowSnapshot.js"></script>
  <script type="text/javascript" src="property_database.js"></script>
  <link rel="stylesheet" type="text/css" href="/tests/SimpleTest/test.css"/>
  <style>

    div.ref {
      display: none;
      height: 30px;
    }

    refA, refB, refC {
      display: block;
      float: left;
    }
    
    div#a, refA {
      background: lightgreen;
      width: 20px;
      height: 30px;
    }
    div#b, refB {
      background: orange;
      width: 30px;
      height: 30px;
    }
    div#c, refC {
      background: blue;
      width: 50px;
      height: 30px;
    }
    div#flexbox {
      display: -moz-flex;
      width: 100px;
      height: 30px;
      visibility: hidden;
    }
  </style>
</head>
<body>
<a target="_blank" href="https://bugzilla.mozilla.org/show_bug.cgi?id=666041">Mozilla Bug 666041</a>
<p id="display"></p>
<div id="content">
  <!-- Reference cases (display:none; only shown during initRefSnapshots) -->
  <div id="references">
    <div class="ref" id="abc"><refA/><refB/><refC/></div>
    <div class="ref" id="acb"><refA/><refC/><refB/></div>
    <div class="ref" id="bac"><refB/><refA/><refC/></div>
    <div class="ref" id="bca"><refB/><refC/><refA/></div>
    <div class="ref" id="cab"><refC/><refA/><refB/></div>
    <div class="ref" id="cba"><refC/><refB/><refA/></div>
  </div>

  <!-- The testcase (initially has visibility:hidden) -->
  <div id="flexbox">
    <div id="a"/><div id="b"/><div id="c"/>
  </div>

</div>
<pre id="test">
<script type="application/javascript">
<![CDATA[
/** Test for Bug 666041 **/
SimpleTest.waitForExplicitFinish();

// DATA
// ----

// This will store snapshots of our reference divs
var gRefSnapshots = {};

// These are the sets of 'order' values that we'll test.
// The first three values in each array are the 'order' values that we'll
// assign to elements a, b, and c (respectively).  The final value in each
// array is the ID of the expected reference rendering.
var gOrderTestcases = [
  // The 6 basic permutations:
  [ 1, 2, 3, "abc"],
  [ 1, 3, 2, "acb"],
  [ 2, 1, 3, "bac"],
  [ 2, 3, 1, "cab"],
  [ 3, 1, 2, "bca"],
  [ 3, 2, 1, "cba"],

  // Test negative values
  [ 1, -5, -2, "bca"],
  [ -50, 0, -2, "acb"],

  // non-integers should be ignored (which gives the default value, 0)
  [ 1,   1.5, 2,   "bac"],
  [ 2.5, 3.4, 1,   "abc"],
  [ 0.5, 1,   1.5, "acb"],

  // Note that "3.0" isn't an <integer>, but "-1" is, according to
  // http://www.w3.org/TR/CSS21/syndata.html#value-def-integer
  [ "3.0", "2.0", "-1", "cab"],

];

// FUNCTIONS
// ---------

function initRefSnapshots() {
  var refIds = ["abc", "acb", "bac", "bca", "cab", "cba"];
  refIds.forEach(function(aRefId) {
    var elem = document.getElementById(aRefId);
    elem.style.display = "block";
    gRefSnapshots[aRefId] = snapshotWindow(window, false);
    elem.style.display = "";
  });
}

function complainIfSnapshotsDiffer(aSnap1, aSnap2, aMsg) {
  var compareResult = compareSnapshots(aSnap1, aSnap2, true);
  ok(compareResult[0], "flexbox rendering should match expected (" + aMsg +")");
  if (!compareResult[0]) {
    todo(false, "TESTCASE: " + compareResult[1]);
    todo(false, "REFERENCE: "+ compareResult[2]);
  }
}

function runOrderTestcase(aOrderTestcase) {
  // Sanity-check
  ok(Array.isArray(aOrderTestcase), "expecting testcase to be an array");
  is(aOrderTestcase.length, 4, "expecting testcase to have 4 elements");

  document.getElementById("a").style.MozOrder = aOrderTestcase[0];
  document.getElementById("b").style.MozOrder = aOrderTestcase[1];
  document.getElementById("c").style.MozOrder = aOrderTestcase[2];

  var snapshot = snapshotWindow(window, false);
  complainIfSnapshotsDiffer(snapshot, gRefSnapshots[aOrderTestcase[3]],
                            aOrderTestcase);

  // Clean up
  document.getElementById("a").style.MozOrder = "";
  document.getElementById("b").style.MozOrder = "";
  document.getElementById("c").style.MozOrder = "";
}

function main() {
  initRefSnapshots();

  // Show the flexbox
  var flexbox = document.getElementById("flexbox");
  flexbox.style.visibility = "visible";

  // Initial sanity-check: should be in expected document order
  var initialFlexboxSnapshot = snapshotWindow(window, false);
  complainIfSnapshotsDiffer(initialFlexboxSnapshot, gRefSnapshots["abc"],
                            "initial flexbox rendering, no 'order' value yet");

  // OK, now we run our tests
  gOrderTestcases.forEach(runOrderTestcase);

  // Hide the flexbox at the end
  flexbox.style.visibility = "";


  SimpleTest.finish();
}

window.addEventListener("load", main, false);

]]>
</script>
</pre>
</body>
</html>
