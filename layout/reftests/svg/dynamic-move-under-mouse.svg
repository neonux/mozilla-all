<!--
     Any copyright is dedicated to the Public Domain.
     http://creativecommons.org/licenses/publicdomain/
-->
<svg xmlns="http://www.w3.org/2000/svg" version="1.1" class="reftest-wait">
  <title>Test :hover styling when an element is moved under the mouse</title>
  <!--
    From https://bugzilla.mozilla.org/show_bug.cgi?id=119061

    This test checks whether an element to which the :hover pseudo class
    applies is correctly restyled when it moves under the mouse pointer.
    Note this is different to having the pointer move over the element.
  -->
  <style type="text/css">

#target:hover { fill: lime; }

  </style>
  <script type="text/javascript">//<![CDATA[

function synthesizeMouseEvent(type,                // string
                              x,                   // float
                              y,                   // float
                              button,              // long
                              clickCount,          // long
                              modifiers,           // long
                              ignoreWindowBounds)  // boolean
{
  netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');

  window.QueryInterface(Components.interfaces.nsIInterfaceRequestor)
        .getInterface(Components.interfaces.nsIDOMWindowUtils)
        .sendMouseEvent(type, x, y, button, clickCount, modifiers, ignoreWindowBounds);
}

function check_mousemove(event)
{
  if (event.clientX != 51 || event.clientY != 51) {
    document.getElementById('message2').setAttribute('display','block');
  }
}

document.addEventListener('mousemove', check_mousemove, false);

function run_test()
{
  try {
    synthesizeMouseEvent('mousemove', 51, 51, 0, 0, 0, false);
  } catch(e) {
    document.getElementById('message1').setAttribute('display','block');
  }
  document.getElementById('g').removeAttribute('display');
  document.documentElement.removeAttribute('class');
}

document.addEventListener("MozReftestInvalidate", run_test, false);
setTimeout(run_test, 1000); // for manual testing

  //]]></script>
  <rect width="100%" height="100%" fill="red"/>
  <g id="g" display="none">
    <rect width="100%" height="100%" fill="lime"/>
    <rect id="target" width="100" height="100" fill="red"/>
  </g>
  <text id="message1" display="none" x="10" y="40">
    You user-agent does not have the necessary support for synthesizing mouse events.
  </text>
  <text id="message2" display="none" x="10" y="80">
    You moved your mouse! That can cause this test to appear to fail.
  </text>
</svg>
