<?xml version="1.0"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * the Mozilla Foundation.
 * Portions created by the Initial Developer are Copyright (C) 2010
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Robert Strong <robert.bugzilla@gmail.com> (Original Author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
-->

<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<?xml-stylesheet href="chrome://mochikit/content/tests/SimpleTest/test.css" type="text/css"?>

<window title="Test update prompt error patching page (partial failed - download complete)"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        onload="runTestDefault();">
<script type="application/javascript" 
        src="chrome://mochikit/content/MochiKit/packed.js"/>
<script type="application/javascript"
        src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"/>
<script type="application/javascript"
        src="chrome://mochikit/content/chrome/toolkit/mozapps/update/test/chrome/utils.js"/>

<script type="application/javascript">
<![CDATA[

SimpleTest.waitForExplicitFinish();

/**
 * test preparation:
 */
function test01() {
  ok(true, "Entering test01 - test preparation");

  // Specify the url to update.sjs with a slowDownloadMar param so the ui can
  // load before the download completes.
  var slowDownloadURL = URL_UPDATE + "?slowDownloadMar=1";
  var patches = getLocalPatchString("partial", null, null, null, null, null,
                                    STATE_PENDING) +
                getLocalPatchString("complete", slowDownloadURL);
  var updates = getLocalUpdateString(patches);

  writeUpdatesToXMLFile(getLocalUpdatesXMLString(updates), true);

  writeUpdatesToXMLFile(getLocalUpdatesXMLString(""), false);
  writeStatusFile(STATE_FAILED + ": " + CRC_ERROR);
  reloadUpdateManagerData();

  gNextFunc = test02;
  gPageId = PAGEID_ERROR_PATCHING;
  initUpdateServiceStub();
}

/**
 * error patching page
 */
function test02() {
  ok(true, "Entering test02 - error patching page");

  is(gDocElem.currentPage.pageid, PAGEID_ERROR_PATCHING,
     "Page ID should be " + PAGEID_ERROR_PATCHING);
  ok(gDocElem.getButton("extra1").hidden, "extra1 button should be hidden");
  ok(gDocElem.getButton("extra1").disabled, "extra1 button should be disabled");
  ok(gDocElem.getButton("extra2").hidden, "extra2 button should be hidden");
  ok(gDocElem.getButton("extra2").disabled, "extra2 button should be disabled");
  ok(gDocElem.getButton("back").hidden, "back button should be hidden");
  ok(gDocElem.getButton("back").disabled, "back button should be disabled");
  ok(!gDocElem.getButton("next").hidden, "next button should not be hidden");
  ok(!gDocElem.getButton("next").disabled, "next button should not be disabled");
  ok(gDocElem.getButton("finish").hidden, "finish button should be hidden");
  ok(gDocElem.getButton("finish").disabled, "finish button should be disabled");
  ok(gDocElem.getButton("cancel").hidden, "cancel button should be hidden");
  ok(gDocElem.getButton("cancel").disabled, "cancel button should be disabled");

  gNextFunc = test03;
  gPageId = PAGEID_DOWNLOADING;
  addPageShowListener();
  // go forward to the downloading page
  gDocElem.getButton("next").click();
}

/**
 * downloading page
 */
function test03() {
  ok(true, "Entering test12 - downloading page");

  is(gDocElem.currentPage.pageid, PAGEID_DOWNLOADING,
     "Page ID should be " + PAGEID_DOWNLOADING);

  gNextFunc = test04;
  gPageId = PAGEID_FINISHED;
  addPageShowListener();
  // The downloading page will automatically go to the finish page.
}

/**
 * finished page
 */
function test04() {
  ok(true, "Entering test04 - finished page");

  is(gDocElem.currentPage.pageid, PAGEID_FINISHED,
     "Page ID should be " + PAGEID_FINISHED);

  gNextFunc = finishTestDefault;
  // exit by clicking the extra1 (restart later) button
  gDocElem.getButton("extra1").click();
}

]]>
</script>

<body xmlns="http://www.w3.org/1999/xhtml">
  <p id="display"></p>
  <div id="content" style="display: none"></div>
  <pre id="test"></pre>
</body>
</window>
