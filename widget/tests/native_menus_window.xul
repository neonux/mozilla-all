<?xml version="1.0"?>

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Findbar Test code
   -
   - The Initial Developer of the Original Code is
   - Mozilla Corporation.
   - Portions created by the Initial Developer are Copyright (C) 2006
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Josh Aas <josh@mozilla.com>
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL or the LGPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://global/skin" type="text/css"?>

<window id="NativeMenuWindow"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        width="300"
        height="300"
        onload="onLoad();"
        title="Native Menu Test">

  <command id="cmd_FooItem1" oncommand="executedCommandID = 'cmd_FooItem1';"/>
  <command id="cmd_FooItem2" oncommand="executedCommandID = 'cmd_FooItem2';"/>
  <command id="cmd_BarItem1" oncommand="executedCommandID = 'cmd_BarItem1';"/>
  <command id="cmd_BarItem2" oncommand="executedCommandID = 'cmd_BarItem2';"/>

  <menubar id="nativemenubar">
    <menu id="foo" label="Foo">
      <menupopup>
        <menuitem label="FooItem1" command="cmd_FooItem1"/>
        <menuitem label="FooItem2" command="cmd_FooItem2"/>
        <menuseparator/>
        <menu label="Bar">
          <menupopup>
            <menuitem label="BarItem1" command="cmd_BarItem1"/>
            <menuitem label="BarItem2" command="cmd_BarItem2"/>
          </menupopup>
        </menu>
      </menupopup>
    </menu>
  </menubar>

  <script type="application/javascript"><![CDATA[

    function ok(condition, message) {
      window.opener.wrappedJSObject.SimpleTest.ok(condition, message);
    }

    function onTestsFinished() {
      window.close();
      window.opener.wrappedJSObject.SimpleTest.finish();
    }

    var executedCommandID = "";

    function testItem(location, targetID) {
      netscape.security.PrivilegeManager.enablePrivilege('UniversalXPConnect');
      var utils = window.QueryInterface(Components.interfaces.nsIInterfaceRequestor).
                                          getInterface(Components.interfaces.nsIDOMWindowUtils);

      var correctCommandHandler = false;
      try {
        utils.activateNativeMenuItemAt(location);
        correctCommandHandler = executedCommandID == targetID;
      }
      catch (e) {
        dump(e + "\n");
      }
      finally {
        ok(correctCommandHandler, 'Command handler not run correctly');
        executedCommandID = "";
      }
    }

    function onLoad() {
      var _delayedOnLoad = function() {
        testItem("0|0", "cmd_FooItem1");
        testItem("0|1", "cmd_FooItem2");
        testItem("0|3|0", "cmd_BarItem1");
        testItem("0|3|1", "cmd_BarItem2");
        onTestsFinished()
      }

      setTimeout(_delayedOnLoad, 1000);
    }    

  ]]></script>
</window>
