/**
 * Tests in this file are taken from contentModelFlags.test, escapeFlag.test,
 * and xmlViolation.test, at
 * http://html5lib.googlecode.com/hg/testdata/tokenizer/.  Those tests with
 * a 'lastStartTag' field have been adjusted to add the start tag to the
 * input and output, since these tests are run through the tree builder and
 * not just the tokenizer.
 */

var tokenizerTests = {"tests": [

{"description":"Commented close tag in [R]CDATA",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"<xmp>foo<!--</xmp>--></xmp>",
"output":[["StartTag", "xmp", {}], ["Character", "foo<!--</xmp>-->"], ["EndTag", "xmp"]]},

{"description":"Bogus comment in [R]CDATA",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"<xmp>foo<!-->baz</xmp>",
"output":[["StartTag", "xmp", {}], ["Character", "foo<!-->baz"], ["EndTag", "xmp"]]},

{"description":"End tag surrounded by bogus comment in [R]CDATA",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"<xmp>foo<!--></xmp><!-->baz</xmp>",
"output":[["StartTag", "xmp", {}], ["Character", "foo<!-->"], ["EndTag", "xmp"], "ParseError", ["Comment", ""], ["Character", "baz"], ["EndTag", "xmp"]]},

{"description":"Commented entities in RCDATA",
"contentModelFlags":["RCDATA"],
"lastStartTag":"xmp",
"input":"<xmp> &amp; <!-- &amp; --> &amp; </xmp>",
"output":[["StartTag", "xmp", {}], ["Character", " & <!-- &amp; --> & "], ["EndTag", "xmp"]]},

{"description":"Incorrect comment ending sequences in [R]CDATA",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"<xmp>foo<!-- x --x>x-- >x--!>x--<></xmp>",
"output":[["StartTag", "xmp", {}], ["Character", "foo<!-- x --x>x-- >x--!>x--<></xmp>"]]},

{"description":"Non-XML character",
"input":"a\uFFFFb",
"ignoreErrorOrder":true,
"output":["ParseError",["Character","a\uFFFDb"]]},

{"description":"Non-XML space",
"input":"a\u000Cb",
"ignoreErrorOrder":true,
"output":[["Character","a b"]]},

{"description":"Double hyphen in comment",
"input":"<!-- foo -- bar -->",
"output":["ParseError",["Comment"," foo - - bar "]]},

{"description":"FF between attributes",
"input":"<a b=''\u000Cc=''>",
"output":[["StartTag","a",{"b":"","c":""}]]},

{"description":"PLAINTEXT content model flag",
"contentModelFlags":["PLAINTEXT"],
"lastStartTag":"plaintext",
"input":"<plaintext><head>&body;",
"output":[["StartTag", "plaintext", {}], ["Character", "<head>&body;"]]},

{"description":"End tag closing RCDATA or CDATA",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"<xmp>foo</xmp>",
"output":[["StartTag", "xmp", {}], ["Character", "foo"], ["EndTag", "xmp"]]},

{"description":"End tag closing RCDATA or CDATA (case-insensitivity)",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"<xmp>foo</xMp>",
"output":[["StartTag", "xmp", {}], ["Character", "foo"], ["EndTag", "xmp"]]},

{"description":"End tag closing RCDATA or CDATA (ending with space)",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"<xmp>foo</xmp ",
"output":[["StartTag", "xmp", {}], ["Character", "foo"], "ParseError"]},

{"description":"End tag closing RCDATA or CDATA (ending with EOF)",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"<xmp>foo</xmp",
"output":[["StartTag", "xmp", {}], ["Character", "foo"], "ParseError"]},

{"description":"End tag closing RCDATA or CDATA (ending with slash)",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"<xmp>foo</xmp/",
"output":[["StartTag", "xmp", {}], ["Character", "foo"], "ParseError"]},

{"description":"End tag not closing RCDATA or CDATA (ending with left-angle-bracket)",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"<xmp>foo</xmp<",
"output":[["StartTag", "xmp", {}], ["Character", "foo</xmp<"]]},

{"description":"End tag with incorrect name in RCDATA or CDATA",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"<xmp></foo>bar</xmp>",
"output":[["StartTag", "xmp", {}], ["Character", "</foo>bar"], ["EndTag", "xmp"]]},

{"description":"End tag with incorrect name in RCDATA or CDATA (starting like correct name)",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"<xmp></foo>bar</xmpaar>",
"output":[["StartTag", "xmp", {}], ["Character", "</foo>bar</xmpaar>"]]},

{"description":"End tag closing RCDATA or CDATA, switching back to PCDATA",
"contentModelFlags":["RCDATA", "CDATA"],
"lastStartTag":"xmp",
"input":"<xmp>foo</xmp></baz>",
"output":[["StartTag", "xmp", {}], ["Character", "foo"], ["EndTag", "xmp"], ["EndTag", "baz"]]},

{"description":"CDATA w/ something looking like an entity",
"contentModelFlags":["CDATA"],
"lastStartTag":"xmp",
"input":"<xmp>&foo;",
"output":[["StartTag", "xmp", {}], ["Character", "&foo;"]]},

{"description":"RCDATA w/ an entity",
"contentModelFlags":["RCDATA"],
"lastStartTag":"textarea",
"input":"<textarea>&lt;",
"output":[["StartTag", "textarea", {}], ["Character", "<"]]}

]}
