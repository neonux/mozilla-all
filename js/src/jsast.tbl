/* -*- Mode: C++; tab-width: 8; indent-tabs-mode: nil; c-basic-offset: 4 -*-
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code, released
 * March 31, 1998.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/*
 * These must be listed in exactly this order so the AST_xxx fields match up
 * with their integer definition in jsreflect.cpp.
 */

/* AST_ERROR = -1 */

ASTDEF(AST_PROGRAM,              0,  "Program")

ASTDEF(AST_IDENTIFIER,           1,  "Identifier")
ASTDEF(AST_UNOP,                 2,  "UnaryOperator")
ASTDEF(AST_BINOP,                3,  "BinaryOperator")
ASTDEF(AST_LOGOP,                4,  "LogicalOperator")
ASTDEF(AST_AOP,                  5,  "AssignmentOperator")
ASTDEF(AST_UPDOP,                6,  "UpdateOperator")
ASTDEF(AST_LITERAL,              7,  "Literal")

ASTDEF(AST_FUNC_DECL,            8,  "FunctionDeclaration")
ASTDEF(AST_VAR_DECL,             9,  "VariableDeclaration")

ASTDEF(AST_LIST_EXPR,            10, "SequenceExpression")
ASTDEF(AST_COND_EXPR,            11, "ConditionalExpression")
ASTDEF(AST_UNARY_EXPR,           12, "UnaryExpression")
ASTDEF(AST_BINARY_EXPR,          13, "BinaryExpression")
ASTDEF(AST_ASSIGN_EXPR,          14, "AssignmentExpression")
ASTDEF(AST_LOGICAL_EXPR,         15, "LogicalExpression")
ASTDEF(AST_UPDATE_EXPR,          16, "UpdateExpression")
ASTDEF(AST_NEW_EXPR,             17, "NewExpression")
ASTDEF(AST_CALL_EXPR,            18, "CallExpression")
ASTDEF(AST_MEMBER_EXPR,          19, "MemberExpression")
ASTDEF(AST_FUNC_EXPR,            20, "FunctionExpression")
ASTDEF(AST_ARRAY_EXPR,           21, "ArrayExpression")
ASTDEF(AST_OBJECT_EXPR,          22, "ObjectExpression")
ASTDEF(AST_THIS_EXPR,            23, "ThisExpression")
ASTDEF(AST_GRAPH_EXPR,           24, "GraphExpression")
ASTDEF(AST_GRAPH_IDX_EXPR,       25, "GraphIndexExpression")
ASTDEF(AST_COMP_EXPR,            26, "ComprehensionExpression")
ASTDEF(AST_GENERATOR_EXPR,       27, "GeneratorExpression")
ASTDEF(AST_YIELD_EXPR,           28, "YieldExpression")

ASTDEF(AST_EMPTY_STMT,           29, "EmptyStatement")
ASTDEF(AST_BLOCK_STMT,           30, "BlockStatement")
ASTDEF(AST_EXPR_STMT,            31, "ExpressionStatement")
ASTDEF(AST_LAB_STMT,             32, "LabeledStatement")
ASTDEF(AST_IF_STMT,              33, "IfStatement")
ASTDEF(AST_SWITCH_STMT,          34, "SwitchStatement")
ASTDEF(AST_WHILE_STMT,           35, "WhileStatement")
ASTDEF(AST_DO_STMT,              36, "DoWhileStatement")
ASTDEF(AST_FOR_STMT,             37, "ForStatement")
ASTDEF(AST_FOR_IN_STMT,          38, "ForInStatement")
ASTDEF(AST_BREAK_STMT,           39, "BreakStatement")
ASTDEF(AST_CONTINUE_STMT,        40, "ContinueStatement")
ASTDEF(AST_WITH_STMT,            41, "WithStatement")
ASTDEF(AST_RETURN_STMT,          42, "ReturnStatement")
ASTDEF(AST_TRY_STMT,             43, "TryStatement")
ASTDEF(AST_THROW_STMT,           44, "ThrowStatement")
ASTDEF(AST_DEBUGGER_STMT,        45, "DebuggerStatement")

ASTDEF(AST_CASE,                 46, "SwitchCase")
ASTDEF(AST_CATCH,                47, "CatchClause")
ASTDEF(AST_COMP_BLOCK,           48, "ComprehensionBlock")

ASTDEF(AST_ARRAY_PATT,           49, "ArrayPattern")
ASTDEF(AST_OBJECT_PATT,          50, "ObjectPattern")

ASTDEF(AST_XMLANYNAME,           51, "XMLAnyName")
ASTDEF(AST_XMLATTR_SEL,          52, "XMLAttributeSelector")
ASTDEF(AST_XMLESCAPE,            53, "XMLEscape")
ASTDEF(AST_XMLFILTER,            54, "XMLFilterExpression")
ASTDEF(AST_XMLDEFAULT,           55, "XMLDefaultDeclaration")
ASTDEF(AST_XMLQUAL,              56, "XMLQualifiedIdentifier")
ASTDEF(AST_XMLELEM,              57, "XMLElement")
ASTDEF(AST_XMLTEXT,              58, "XMLText")
ASTDEF(AST_XMLLIST,              59, "XMLList")
ASTDEF(AST_XMLSTART,             60, "XMLStartTag")
ASTDEF(AST_XMLEND,               61, "XMLEndTag")
ASTDEF(AST_XMLPOINT,             62, "XMLPointTag")
ASTDEF(AST_XMLNAME,              63, "XMLName")
ASTDEF(AST_XMLATTR,              64, "XMLAttribute")
ASTDEF(AST_XMLCDATA,             65, "XMLCdata")
ASTDEF(AST_XMLCOMMENT,           66, "XMLComment")
ASTDEF(AST_XMLPI,                67, "XMLProcessingInstruction")

/* AST_LIMIT = last + 1 */
