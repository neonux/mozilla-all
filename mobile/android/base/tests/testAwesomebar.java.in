#filter substitution
package @ANDROID_PACKAGE_NAME@.tests;

import @ANDROID_PACKAGE_NAME@.*;

public class testAwesomebar extends BaseTest {
    public void testAwesomebar() {
        String url = "http://mochi.test:8888/tests/robocop/robocop_blank_01.html";
        mActions.waitForGeckoEvent("Gecko:Ready");
        Element awesomebar = mDriver.findElement("awesome_bar");
        awesomebar.click();

        Element urlbar = mDriver.findElement("awesomebar_text");
        getInstrumentation().waitForIdleSync();
        mActions.sendKeys(url);
        mAsserter.is(urlbar.getText(), url, "Awesomebar URL Typed Properly");

        mActions.sendSpecialKey(Actions.SpecialKey.ENTER);
        // wait for screen to load
        mActions.waitForGeckoEvent("DOMContentLoaded");
        mDriver.setupScrollHandling();

        // Calculate where we should be dragging.
        int midX = mDriver.getGeckoLeft() + mDriver.getGeckoWidth()/2;
        int midY = mDriver.getGeckoTop() + mDriver.getGeckoHeight()/2;
        int endY = mDriver.getGeckoTop() + mDriver.getGeckoHeight()/10;
        for (int i = 0; i < 10; i++) {
            mActions.drag(midX, midX, midY, endY);
            try {
                Thread.sleep(200);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        // Click the awesomebar again
        awesomebar.click();
        getInstrumentation().waitForIdleSync();
        mAsserter.is(urlbar.getText(), url, "Awesomebar URL stayed the same");
    }
}
