#filter substitution
package @ANDROID_PACKAGE_NAME@.tests;

import @ANDROID_PACKAGE_NAME@.*;

public class testBookmark extends BaseTest {
    public void testBookmark() {
        // TODO: find a better way to not hardcode this url
        String url = "http://mochi.test:8888/tests/robocop/robocop_blank_02.html";

        mActions.waitForGeckoEvent("Gecko:Ready");
        Element awesomebar = mDriver.findElement("awesome_bar");
        awesomebar.click();

        Element urlbar = mDriver.findElement("awesomebar_text");
        getInstrumentation().waitForIdleSync();
        mActions.sendKeys(url);
        mAsserter.is(urlbar.getText(), url, "Awesomebar url typed properly");

        //Click the top item in the list.
        mActions.sendSpecialKey(Actions.SpecialKey.DOWN);
        mActions.sendSpecialKey(Actions.SpecialKey.ENTER);
        mActions.waitForGeckoEvent("DOMContentLoaded");

        getInstrumentation().waitForIdleSync();
        awesomebar.click();
        mAsserter.is(urlbar.getText(), url, "Awesomebar URL still on");

        //Click the Top item in the history list.
        getInstrumentation().waitForIdleSync();
        mActions.sendSpecialKey(Actions.SpecialKey.RIGHT);
        mActions.sendSpecialKey(Actions.SpecialKey.RIGHT);
        getInstrumentation().waitForIdleSync();
        mActions.sendSpecialKey(Actions.SpecialKey.DOWN);
        mActions.sendSpecialKey(Actions.SpecialKey.DOWN);
        mActions.sendSpecialKey(Actions.SpecialKey.ENTER);
        mActions.waitForGeckoEvent("DOMContentLoaded");

        getInstrumentation().waitForIdleSync();
        awesomebar.click();
        //Unfortunately, the item isn't constant so can't be tested.
        //asserter.is(url, urlbar.getText(),"Shouldn't this be the last url in the history?");
    }
}
