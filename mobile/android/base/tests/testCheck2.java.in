#filter substitution
package @ANDROID_PACKAGE_NAME@.tests;

import java.io.IOException;
import @ANDROID_PACKAGE_NAME@.*;

public class testCheck2 extends PixelTest {
    public void testCheck2() {
        setTestType("talos");
        String url = getAbsoluteUrl("/startup_test/fennecmark/timecube.html");

        mActions.expectGeckoEvent("Gecko:Ready").blockForEvent();
        loadAndPaint(url);
        mDriver.setupScrollHandling();

        /*
         * for this test, we load the timecube page, and replay a recorded sequence of events
         * that is a user panning/zooming around the page. specific things in the sequence
         * include:
         * - scroll on one axis followed by scroll on another axis
         * - pinch zoom (in and out)
         * - double-tap zoom (in and out)
         * - multi-fling panning with different velocities on each fling
         *
         * this checkerboarding metric is going to be more of a "functional" style test than
         * a "unit" style test; i.e. it covers a little bit of a lot of things to measure
         * overall performance, but doesn't really allow identifying which part is slow.
         */

        MotionEventReplayer mer = new MotionEventReplayer(getInstrumentation(), mDriver.getGeckoLeft(), mDriver.getGeckoTop());

        mDriver.startCheckerboardRecording();
        // replay the events
        try {
            mer.replayEvents(getAsset("testcheck2-motionevents"));
        } catch (IOException ioe) {
            mAsserter.dumpLog("IOException while replaying events", ioe);
        }
        // give it some time to draw any final frames
        try {
            Thread.sleep(1000);
        } catch (InterruptedException ie) {
        }
        float completeness = mDriver.stopCheckerboardRecording();

        mAsserter.dumpLog("__start_report" + completeness + "__end_report");
        System.out.println("Completeness score: " + completeness);
        long msecs = System.currentTimeMillis();
        mAsserter.dumpLog("__startTimestamp" + msecs + "__endTimestamp");
    }
}
